{"version":3,"file":"ngx-tags-input.js.map","sources":["ng://ngx-tags-input/lib/ngx-tags-input.component.ts","ng://ngx-tags-input/lib/ngx-tags-input.module.ts"],"sourcesContent":["import { Component, forwardRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\n\r\nconst noop = () => {};\r\n\r\nconst TAGS_INPUT_TEMPLATE = `\r\n    <div class=\"tags-input\">\r\n        <span class=\"tags-input__tag label label-primary badge badge-primary\" *ngFor=\"let tag of tags\">\r\n            {{tag[displayField]}}\r\n            <span *ngIf=\"isDeleteable(tag)\" role=\"button\" class=\"tags-input__tag-remove-btn\" (click)=\"removeTag(tag)\" (touch)=\"removeTag(tag)\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                <span class=\"sr-only\">Close</span>\r\n            </span>\r\n        </span>\r\n        <input\r\n            *ngIf=\"options === null; else withTypeahead\" \r\n            class=\"tags-input__input-field\" \r\n            type=\"text\" \r\n            [placeholder]=\"getPlaceholder()\"\r\n            name=\"tags\"\r\n            (keyup.enter)=\"addTag(tagInput)\" (keydown.backspace)=\"removeLastTag(tagInput)\"\r\n            [disabled]=\"!canAddTags || maximumOfTagsReached()\"\r\n            [hidden]=\"!canAddTags || maximumOfTagsReached()\"\r\n            #tagInput />\r\n        <ng-template #withTypeahead>\r\n          <input\r\n            *ngIf=\"options !== null\" \r\n            class=\"tags-input__input-field\" \r\n            type=\"text\" \r\n            [placeholder]=\"getPlaceholder()\"\r\n            name=\"tags\"\r\n            (keydown.backspace)=\"removeLastTag(tagInput)\"\r\n            [(ngModel)]=\"selected\" \r\n            [typeahead]=\"options\"\r\n            [typeaheadOptionField]=\"displayField\"\r\n            (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\r\n            (typeaheadNoResults)=\"typeaheadOnNoMatch($event)\"\r\n            [typeaheadMinLength]=\"minLengthBeforeOptions\"\r\n            [typeaheadScrollable]=\"scrollableOptions\"\r\n            [typeaheadLatinize]=\"true\"\r\n            [typeaheadOptionsInScrollableView]=\"scrollableOptionsInView\"\r\n            [disabled]=\"!canAddTags || maximumOfTagsReached()\"\r\n            [hidden]=\"!canAddTags || maximumOfTagsReached()\"\r\n            #tagInput />\r\n        </ng-template>\r\n    </div>\r\n`;\r\n\r\nconst TAGS_INPUT_STYLE = `\r\n    :host {\r\n        overflow: auto;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .tags-input {\r\n        align-items: center;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .tags-input__tag {\r\n        display: inline-block;\r\n        margin-bottom: 2px;\r\n        margin-right: 5px;\r\n        padding-right: 0.3em;\r\n    }\r\n\r\n    .tags-input__tag-remove-btn {\r\n        cursor: pointer;\r\n        display: inline-block;\r\n        font-size: 12px;\r\n        margin: -3px 0 0 3px;\r\n        padding: 0;\r\n        vertical-align: top;\r\n    }\r\n\r\n    .tags-input__input-field {\r\n        border: none;\r\n        flex-grow: 1;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgxTagsInputComponent),\r\n  multi: true\r\n};\r\n\r\nexport interface TagsChangedEvent {\r\n  change: string,\r\n  tag: any\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tags-input',\r\n  template: TAGS_INPUT_TEMPLATE,\r\n  styles: [TAGS_INPUT_STYLE],\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class NgxTagsInputComponent implements ControlValueAccessor {\r\n  selected:string = '';\r\n  public tags: Array<any> = [];\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  @Input() maxTags: number;\r\n  @Input() removeLastOnBackspace: boolean = false;\r\n  @Input() canDeleteTags: boolean = true;\r\n  @Input() canAddTags: boolean = true;\r\n  @Input() placeholder: string = '';\r\n  @Input() options: any = null;\r\n  @Input() displayField: string = 'displayValue';\r\n  @Input() minLengthBeforeOptions: number = 1;\r\n  @Input() scrollableOptions: boolean = false;\r\n  @Input() scrollableOptionsInView: number = 5;\r\n  @Output() onTagsChanged: EventEmitter<TagsChangedEvent> = new EventEmitter();\r\n  @Output() onMaxTagsReached: EventEmitter<void> = new EventEmitter();\r\n  @Output() onNoOptionsMatch: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  getPlaceholder(): string {\r\n    if(this.tags && this.tags.length > 0){\r\n        return '';\r\n    }\r\n    return this.placeholder;\r\n  }\r\n\r\n  private tagsChanged(type: string, tag: any): void {\r\n      this.onChangeCallback(this.tags);\r\n      this.onTagsChanged.emit({\r\n          change: type,\r\n          tag: tag\r\n      });\r\n      if(this.maximumOfTagsReached()){\r\n          this.onMaxTagsReached.emit();\r\n      }\r\n  }\r\n\r\n  removeLastTag(tagInput: HTMLInputElement): void {\r\n      if(!this.removeLastOnBackspace || !this.tags.length) {\r\n          return;\r\n      }\r\n\r\n      if (tagInput.value === ''){\r\n          this.removeTag(this.tags[this.tags.length-1]);\r\n      }\r\n  }\r\n\r\n  addTag(tagInput: HTMLInputElement): void {\r\n      if (tagInput.value.trim() !== ''){\r\n          let tag = {\r\n              [this.displayField]: tagInput.value\r\n          };\r\n          this.addPredefinedTag(tag);\r\n      }\r\n      tagInput.value = '';\r\n  }\r\n\r\n  private addPredefinedTag(tag: Object): void {\r\n      if (!this.maximumOfTagsReached()){\r\n          this.tags.push(tag);\r\n          this.tagsChanged('add', tag);\r\n      }\r\n  }\r\n\r\n  removeTag(tagToRemove: any): void {\r\n      if(!this.isDeleteable(tagToRemove)){\r\n          return;\r\n      }\r\n      this.tags = this.tags.filter(tag => tagToRemove !== tag);\r\n      this.tagsChanged('remove', tagToRemove);\r\n  }\r\n\r\n  maximumOfTagsReached(): boolean {\r\n      return typeof this.maxTags !== 'undefined' && this.tags && this.tags.length>=this.maxTags;\r\n  }\r\n\r\n  isDeleteable(tag: any) {\r\n      if(typeof tag.deleteable !== \"undefined\" && !tag.deleteable){\r\n          return false;\r\n      }\r\n      return this.canDeleteTags;\r\n  }\r\n\r\n  typeaheadOnSelect(e:TypeaheadMatch):void {\r\n      if(typeof e.item === 'string'){\r\n          this.addPredefinedTag({\r\n              [this.displayField]: e.value\r\n          });\r\n      }else {\r\n          this.addPredefinedTag(e.item);\r\n      }\r\n      this.selected = '';\r\n  }\r\n\r\n  typeaheadOnNoMatch(e:any):void {\r\n      if(typeof this.onNoOptionsMatch !== 'undefined'){\r\n          this.onNoOptionsMatch.emit(e)\r\n      }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n      if (value !== this.tags) {\r\n          this.tags = value;\r\n      }\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n      this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxTagsInputComponent } from './ngx-tags-input.component';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead'\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [NgxTagsInputComponent],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    TypeaheadModule.forRoot()\r\n  ],\r\n  exports: [NgxTagsInputComponent]\r\n})\r\nexport class NgxTagsInputModule { }\r\n"],"names":[],"mappings":"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"}
